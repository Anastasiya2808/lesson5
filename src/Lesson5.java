import java.util.Arrays;

public class Lesson5 {
    public static void main(String[] args) {
        // char (–ø—Ä–∏–º–µ—Ç–∏–≤–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö) 16 –±–∏—Ç–Ω—ã–π —Å–∏–º–≤–æ–ª Unicode
        // –æ—Ç 0 –¥–æ 65536 (–Ω–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –∫–æ–¥–æ–≤) / '\u0000' –¥–æ '\uffff'

        char char1 = 'J'; // ' - –æ–¥–∏–Ω–æ—á–Ω—ã–µ –∫–æ–≤—ã—á–∫–∏, –ø–æ–º–µ—â–∞–µ—Ç—Å—è 1 —Å–∏–º–≤–æ–ª, –µ—Å–ª–∏ '' —Ç–æ–≥–¥–∞ —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, —Å–∞–º —Å–∏–º–≤–æ–ª
        char char2 = 74; // - –Ω–æ–º–µ—Ä —Å–∏–º–≤–æ–ª–∞ J (–≤ –Æ–Ω–∏–∫–æ–¥–µ)
        char char3 = '\u0044'; // –Ω–æ–º–µ—Ä —Å–∏–º–≤–æ–ª–∞, 16-—Ä–∏—á–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–∏–º–≤–æ–ª–∞ –≤ escape

        // –ø–æ —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        // print - –±–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
        System.out.print(char1); // J
        System.out.print(char2); // J
        System.out.print(char3);// D

        // System.out.println("\n–°—Ç—Ä–æ–∫–∏");

        //–°—Ç—Ä–æ–∫–∞ - —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Å–∏–º–≤–æ–ª–æ–≤
        // –°—Ç—Ä–æ–∫–∞ - —Å—Å—ã–ª–æ—á–Ω—ã–µ —Ç–∏–ø, —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ String - —Ö—Ä–æ–Ω–∏—Ç—Å—è —Å–∏–º–≤–æ–ª—ã –≤ —Å—Ç—Ä–æ–∫–µ - —Å—Ç—Ä–æ–∫–∞
        // –°—Ç—Ä–æ–∫–∏ –∑–∞–¥–∞—é—Ç—Å—è:
        // 1. –≤ –¥–≤–æ–π–Ω—ã—Ö –∫–æ–≤—ã—á–∫–∞—Ö ''
        // 2. new String(), —Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —á–µ—Ä–µ–∑ "" –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω
        // 3. –°—Ç—Ä–æ—á–∫–∏ –Ω–µ–∏–∑–º–µ–Ω–Ω—ã, –º–æ–∂–Ω–æ –ª–∏—à—å —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π

        System.out.println("–°—Ç—Ä–æ–∫–æ–≤—ã–π –ª–∏—Ç–µ—Ä–∞–ª");

        char [] chars = {'\u004A', '\u004A', '\u004A'};
        String jjdString = new String(chars);
        System.out.println(jjdString);
        System.out.println(jjdString.length()); // –≤–µ—Ä–Ω–µ—Ç –¥–ª–∏–Ω–Ω—É —Å—Ç—Ä–æ–∫–∏ (—Å—Ç—Ä–æ—á–∫–∞ - jjdString, length - –∫–æ–ª-–≤–æ —à—Ç. // 3

        char [] chars1 = {'\uD83D', '\uDC38'}; // —Å—É—Ä—Ä–æ–≥–∞—Ç–Ω–∞—è –ø–∞—Ä–∞ —á–∞—Ä–æ–≤ - –¥—Ä—É–≥ –±–µ–∑ –¥—Ä—É–≥–∞ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        String frogString = new String(chars1);
        System.out.println(frogString); // üê∏
        System.out.println(frogString.length()); // 2
        System.out.println(frogString.codePoints().count()); // 1, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤

        // –•—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ –¥–æ JAVA 9: –º–∞—Å—Å–∏–≤ char[] –≤ –∫–æ–¥–∏—Ä–æ–≤–∫–µ UTF-16
        // –∫–∞–∂–¥—ã–π —á–∞—Ä –±—ã–ª –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω 2-–º—è –±–∞–π—Ç–∞–º–∏

        // –ù–∞—á–∏–Ω–∞—è —Å 9 –≤–µ—Ä—Å–∏–∏ —Å—Ç—Ä–æ–∫–∏ (–∫–æ–º–ø–∞–∫—Ç–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏)
        // —Ö—Ä–∞–Ω—è—Ç—Å—è –∫–∞–∫ –º–∞—Å—Å–∏–≤ byte[] + –∫–æ–¥–∏—Ä–æ–≤–∫–∞ LATIN1 –∏–ª–∏ UTF-16

        // –ü—É–ª —Å—Ç—Ä–æ–∫ - –æ—Ç–¥–µ–ª—å–Ω–∞—è —Ö—Ä–∞–Ω–µ–Ω–∏–µ - —Ö—Ä–∞–Ω–∏—Ç —Ç–æ–ª—å–∫–æ –æ–¥–Ω—É –∫–æ–ø–∏—é –∫–∞–∂–¥–æ–≥–æ —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –ª–∏—Ç–µ—Ä–∞–ª–∞
        // —Ö—Ä–æ–Ω—è—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ
        // –ü—É–ª —Å—Ç—Ä–æ–∫ - "–°—Ç—Ä–æ–∫–∞" - —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç - string1
        // –ø—É–ª —Å—Ç—Ä–æ–∫ - string2 —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ string1, —Ç.–∫ —É–∂–µ –Ω–µ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–∞—è
        // –ø—É–ª —Å—Ç—Ä–æ–∫: "–°—Ç—Ä–æ–∫–∞", "–°—Ç—Ä–æ–∫–∞4", "–°—Ç—Ä–æ–∫–∞44" - –∏–Ω—Ç–µ—Ä–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤—Å–µ–≥–¥–∞ –≤ –ø—É–ª
        // "–°—Ç—Ä–æ–∫–∞" (heap -–∫—É—á–∞ –ø–∞–º—è—Ç–∏)

        String string1 = "–°—Ç—Ä–æ–∫–∞";
        String string2 = "–°—Ç—Ä–æ–∫–∞";

        String string3 = new String("–°—Ç—Ä–æ–∫–∞"); // —Ö—Ä–æ–Ω–∏—Ç—Å—è –Ω–µ –≤ –ø—É–ª–µ, –∞ –≤ –ø–∞–º—è—Ç–∏, —Å—á–∏—Ç–∞–µ—Ç—Å—è ,–∫–∞–∫ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
        // –µ—Å–ª–∏ —á–µ—Ä–µ–∑ new —Ç–æ–≥–¥–∞, –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–∞–∫ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π

        System.out.println(string1 == string2); // true - —Å—Ç—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏–º–∏—Ç–∏–≤—ã, —á–µ—Ä–µ–∑ ==
        System.out.println(string1 == string3);// false

        String internString = string3.intern(); // –ø—Ä–æ—Ü–µ—Å—Å –∏–Ω—Ç–µ—Ä–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
        // —Å–º–æ—Ç—Ä–∏—Ç –≤ –ø—É–ª —Å—Ç—Ä–æ–∫ , –µ—Å–ª–∏ –≤ –ø—É–ª–µ —Å—Ç—Ä–æ–∫ –µ—Å—Ç—å —Ç–∞–∫–∞—è —Å—Ç—Ä–æ–∫–∞, —Ç–æ –æ–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
        // internString —Å—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ "–°—Ç—Ä–æ–∫–∞" –∏–∑ –ø—É–ª–∞


        string1 = "–°—Ç—Ä–æ–∫–∞";
        string2 = "–°—Ç—Ä–æ–∫–∞";

        //–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫
        // –¥–ª—è —Å—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º ==, —Ç–∫ == —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å—Å—ã–ª–∫–∏

        System.out.println(string1.equals(string2)); // true - string1 —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º string2
        System.out.println("c—Ç—Ä–æ–∫–∞".equals(string2)); // false (—Ä–µ–≥–∏—Å—Ç—Ä —É—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è, –≤ string2 –±–æ–ª—å—à–∞—è –±—É–∫–≤–∞, –∞ –≤ —Å–ª–æ–≤–µ "—Å—Ç—Ä–æ–∫–∞" –º–∞–ª–µ–Ω—å–∫–∞—è
        System.out.println("c—Ç—Ä–æ–∫–∞".equalsIgnoreCase(string2)); // true - –±–µ–∑ —É—á–µ—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞ , –±—É–¥—É—Ç —Ä–æ–≤–Ω—ã

        string2 = null; //  string2 –±–æ–ª—å—à–µ –Ω–µ –æ–±—Ä–∞—â–∞–µ—Ç—Å—è –∫ –∑–Ω–∞—á–µ–Ω–∏—é

        System.out.println("c—Ç—Ä–æ–∫–∞".equals(string2)); // –ª—É—á—à–µ —Å–ø–æ—Å–æ–±, —á–µ–º –Ω–∏–∂–µ
        // System.out.println(string2.equals("—Å—Ç—Ä–æ–∫–∞")) - –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≤—ã–¥–∞—Å—Ç –æ—à–∏–±–∫—É (–µ—Å–ª–∏ –Ω–µ —É–≤–µ—Ä–µ–Ω—ã)
        // NullPointerException -–æ—à–∏–±–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

        // –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è null , —Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–±—ã—á–Ω–æ–µ ==
        System.out.println(string2 == null); // true
        System.out.println(string2 != null); // false

        string1 = "Java";
        string2 = "Python";

        // –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—è —Å—Ç—Ä–æ–∫ - —Å–∫–ª–µ–∏–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫
        String concatString = string1 + " :: " + string2;
        System.out.println(concatString); // Java :: Python

        // Java ::
        // Java :: Python
        concatString = string1.concat(" :: ").concat(string2);

        concatString = String.join(" :: ", string1,string2); // " :: " - –∑–∞–¥–∞–µ—Ç—Å—è –º–µ–∂–¥—É –≤—Å–µ–º–∏ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏

        concatString = "";
        for (int i = 0; i < 10; i++){
            concatString += i + " "; // +=  –Ω–µ —Å—Ç–∞–≤–∏—Ç—Å—è, —Å–æ–∑–¥–∞–µ—Ç—Å—è —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–æ–≤
        }
        System.out.println(concatString);

        // StringBuilder - —Ä–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–µ–µ
        // StringBuffer - –ø–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π (–º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤ –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö)

        // —Å–ø–æ—Å–æ–± 1
        string1 = "Java";
        string2 = "Python";
        concatString = "–ù–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏ ";
        //–±—É—Ñ–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏, –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ, –∞ —á–µ—Ä–µ–∑ .append –¥–æ–±–∞–≤–ª—è–µ—Ç —Å—É—â–µ—Å—Ç—É—é—â–∏–µ (—Å–∫–ª–µ–∏–≤–∞–µ—Ç)
        StringBuilder sd = new StringBuilder(concatString); // –ø–µ—Ä–µ–¥–∞–µ–º —Å —á–µ–≥–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–∫–ª–µ–π–∫–∞ - –ù–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏
        sd.append(string1).append(" :: ").append(string2); //  –ù–∞—á–∞–ª–æ —Å—Ç—Ä–æ–∫–∏ Java :: Python

        // —Å–ø–æ—Å–æ–± 2
        StringBuilder sd2 = new StringBuilder(concatString);
        for (int i = 0; i < 10; i++) {
            sd2.append(i).append(" "); // –±—É–¥–µ—Ç –Ω–∞–∫–∞–ø–ª–∏–≤–∞—Ç—å
        }
        System.out.println(sd2); //  —É–∂–µ –≤—ã–∑–≤–∞–Ω .toString

        // –∫–∞–∫ –∏–∑ —Å—Ç—Ä–∏—Ç–±–∏–ª–¥–µ—Ä–∞ –≤—ã—Ç–∞—â–∏—Ç—å —Å—Ç—Ä–æ–∫—É
        String sdString = sd2.toString(); // –≤–æ–∑–≤—Ä–∞—â–∏–µ—Ç —Å—Ç—Ä–æ—á–∫—É, –∫–æ—Ç–æ—Ä—É—é –Ω–∞–∫–æ–ø–∏–ª –±–∏–ª–¥–µ—Ä –∏ –ø—Ä–∏—Å–≤–æ–∏–ª–∏ –µ–º—É –∑–Ω–∞—á–µ–Ω–∏–µ
        System.out.println(sdString);


        // –º–µ—Ç–æ–¥ split()
        String langs = "Java, Python, JavaScript";
        String[] langArr = langs.split(", "); // –≤—ã—Ä–µ–∑–∞–µ—Ç –∫—É—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –≤ –∫–æ–≤—ã—á–∫–∞—Ö
        System.out.println(Arrays.toString(langArr));

        // –º–µ—Ç–æ–¥—ã –∑–∞–º–µ–Ω—ã
        // –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–º–µ–Ω—è–µ—Ç –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è) (–ø–æ–∏—Å–∫ —Å–∏–º–≤–æ–ª–æ–≤..)
        String newString = langs.replaceAll(", ", " - "); // —Å–ø–µ—Ä–≤–∞ —á—Ç–æ —Ö–æ—Ç–∏–º –∑–∞–º–µ–Ω–∏—Ç—å, –∞ –ø–æ—Ç–æ–º –Ω–∞ —á—Ç–æ —Ö–æ—Ç–∏–º –ø–æ–º–µ–Ω—è—Ç—å
        System.out.println(newString);

        // –º–µ–Ω—è–µ—Ç —Ç–æ–ª—å–∫–æ 1 –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        newString = langs.replaceFirst(", ", " - "); // —Å–ø–µ—Ä–≤–∞ —á—Ç–æ —Ö–æ—Ç–∏–º –∑–∞–º–µ–Ω–∏—Ç—å, –∞ –ø–æ—Ç–æ–º –Ω–∞ —á—Ç–æ —Ö–æ—Ç–∏–º –ø–æ–º–µ–Ω—è—Ç—å
        System.out.println(newString);

        // –Ω–µ –ø–æ–¥–¥–µ—Ä–∏–∂–∏–≤–∞–µ—Ç —Ä–µ–≥—É–ª—è—Ä–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
        newString = langs.replace(", ", " - "); //
        System.out.println(newString);

        // –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å—Ç—Ä–æ–∫–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å
        System.out.println(langs.contains("th")); // true

        // –Ω–∞—á–∏–Ω–∞–µ—Ç—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å j —Å–∏–º–≤–æ–ª–æ–≤
        System.out.println(langs.startsWith("j")); // false

        // –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–∞ Script
        System.out.println(langs.endsWith("Script")); // true

        // –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–∏ –∏–Ω–¥–µ–∫—Å a —Å–∏–º–≤–æ–ª–∞ 1,
        System.out.println(langs.startsWith("a",1)); //true



    }
}


